<?php declare(strict_types=1);
/*
 * This document has been generated with
 * https://mlocati.github.io/php-cs-fixer-configurator/#version:3.8.0|configurator
 * you can change this configuration by importing this file.
 */

use PhpCsFixer\Config;
use PhpCsFixer\Finder;

$rules = [
    'array_indentation' => true,
    'array_syntax' => ['syntax'=>'short'],
    'assign_null_coalescing_to_coalesce_equal' => true,
    'binary_operator_spaces' => ['default'=>'single_space', 'operators'=>['=>'=>null]],
    'blank_line_after_namespace' => true,
    'blank_line_before_statement' => ['statements'=>['return']],
    'braces' => true,
    'cast_spaces' => true,
    'class_attributes_separation' => ['elements'=>['const'=>'one', 'method'=>'one', 'property'=>'one']],
    'class_definition' => ['multi_line_extends_each_single_line'=>true, 'single_item_single_line'=>true, 'single_line'=>true],
    'clean_namespace' => true,
    'compact_nullable_typehint' => true,
    'concat_space' => ['spacing'=>'none'],
    'constant_case' => ['case'=>'lower'],
    'control_structure_continuation_position' => true,
    'declare_equal_normalize' => true,
    'declare_parentheses' => true,
    'declare_strict_types' => true,
    'dir_constant' => true,
    'elseif' => true,
    'empty_loop_body' => ['style'=>'braces'],
    'empty_loop_condition' => ['style'=>'while'],
    'encoding' => true,
    'explicit_indirect_variable' => true,
    'explicit_string_variable' => true,
    'full_opening_tag' => true,
    'fully_qualified_strict_types' => true,
    'function_declaration' => true,
    'function_typehint_space' => true,
    'general_phpdoc_tag_rename' => true,
    'global_namespace_import' => ['import_classes'=>true, 'import_constants'=>true],
    'heredoc_to_nowdoc' => true,
    'include' => true,
    'increment_style' => ['style'=>'post'],
    'indentation_type' => true,
    'line_ending' => true,
    'lowercase_cast' => true,
    'lowercase_keywords' => true,
    'lowercase_static_reference' => true,
    'magic_constant_casing' => true,
    'magic_method_casing' => true,
    'method_argument_space' => true,
    'modernize_strpos' => true,
    'modernize_types_casting' => true,
    'multiline_whitespace_before_semicolons' => ['strategy'=>'no_multi_line'],
    'native_function_casing' => true,
    'no_alias_functions' => true,
    'no_blank_lines_after_class_opening' => true,
    'no_blank_lines_after_phpdoc' => true,
    'no_closing_tag' => true,
    'no_empty_comment' => true,
    'no_empty_phpdoc' => true,
    'no_empty_statement' => true,
    'no_extra_blank_lines' => ['tokens'=>['case', 'extra', 'throw', 'use', 'use_trait']],
    'no_leading_import_slash' => true,
    'no_leading_namespace_whitespace' => true,
    'no_mixed_echo_print' => ['use'=>'echo'],
    'no_multiline_whitespace_around_double_arrow' => true,
    'no_php4_constructor' => true,
    'no_short_bool_cast' => true,
    'no_singleline_whitespace_before_semicolons' => true,
    'no_space_around_double_colon' => true,
    'no_spaces_after_function_name' => true,
    'no_spaces_around_offset' => ['positions'=>['inside', 'outside']],
    'no_spaces_inside_parenthesis' => true,
    'no_superfluous_elseif' => true,
    'no_trailing_comma_in_list_call' => true,
    'no_trailing_comma_in_singleline_array' => true,
    'no_trailing_whitespace' => true,
    'no_trailing_whitespace_in_comment' => true,
    'no_unneeded_control_parentheses' => ['statements'=>['break', 'clone', 'continue', 'echo_print', 'return', 'switch_case', 'yield']],
    'no_unreachable_default_argument_value' => true,
    'no_unused_imports' => true,
    'no_useless_else' => true,
    'no_useless_return' => true,
    'no_whitespace_before_comma_in_array' => true,
    'no_whitespace_in_blank_line' => true,
    'non_printable_character' => true,
    'normalize_index_brace' => true,
    'not_operator_with_space' => true,
    'not_operator_with_successor_space' => true,
    'nullable_type_declaration_for_default_null_value' => true,
    'object_operator_without_whitespace' => true,
    'operator_linebreak' => true,
    'ordered_class_elements' => ['sort_algorithm'=>'none'],
    'ordered_imports' => ['sort_algorithm'=>'length'],
    'phpdoc_add_missing_param_annotation' => ['only_untyped'=>false],
    'phpdoc_indent' => true,
    'phpdoc_inline_tag_normalizer' => true,
    'phpdoc_no_access' => true,
    'phpdoc_no_empty_return' => true,
    'phpdoc_no_package' => true,
    'phpdoc_no_useless_inheritdoc' => true,
    'phpdoc_order' => true,
    'phpdoc_order_by_value' => true,
    'phpdoc_return_self_reference' => true,
    'phpdoc_scalar' => true,
    'phpdoc_single_line_var_spacing' => true,
    'phpdoc_summary' => true,
    'phpdoc_tag_type' => true,
    'phpdoc_to_comment' => true,
    'phpdoc_trim' => true,
    'phpdoc_types' => true,
    'phpdoc_var_without_name' => true,
    'psr_autoloading' => true,
    'return_assignment' => true,
    'return_type_declaration' => true,
    'self_accessor' => true,
    'self_static_accessor' => true,
    'semicolon_after_instruction' => true,
    'set_type_to_cast' => true,
    'short_scalar_cast' => true,
    'simple_to_complex_string_variable' => true,
    'simplified_if_return' => true,
    'simplified_null_return' => true,
    'single_blank_line_at_eof' => true,
    'single_blank_line_before_namespace' => true,
    'single_class_element_per_statement' => true,
    'single_import_per_statement' => true,
    'single_line_after_imports' => true,
    'single_line_comment_spacing' => true,
    'single_line_comment_style' => ['comment_types'=>['hash']],
    'single_line_throw' => true,
    'single_quote' => true,
    'single_space_after_construct' => true,
    'space_after_semicolon' => true,
    'standardize_not_equals' => true,
    'switch_case_semicolon_to_colon' => true,
    'switch_case_space' => true,
    'ternary_operator_spaces' => true,
    'ternary_to_elvis_operator' => true,
    'ternary_to_null_coalescing' => true,
    'trailing_comma_in_multiline' => true,
    'trim_array_spaces' => true,
    'types_spaces' => true,
    'unary_operator_spaces' => true,
    'visibility_required' => ['elements'=>['property', 'method', 'const']],
    'void_return' => true,
    'whitespace_after_comma_in_array' => true,
];

$finder = Finder::create()
    ->exclude('vendor')
    ->in([
        __DIR__.'/src',
        // __DIR__.'/config',
        // __DIR__.'/database',
        // __DIR__.'/resources',
        // __DIR__.'/routes',
        __DIR__.'/tests',
    ])
    ->name('*.php')
    ->notName('*.blade.php')
    ->ignoreDotFiles(true)
    ->ignoreVCS(true);

return (new Config())
    ->setFinder($finder)
    ->setRules($rules)
    ->setRiskyAllowed(true)
    ->setUsingCache(true);
